package {{packageName}}.infrastructure

import {{packageName}}.base.DataEntity

open class DataEntityIterator<T: DataEntity>(var items: List<T>) : Iterator<T> {
    private var index = 0

    private val size: Int
        get() = items.size

    override fun hasNext(): Boolean  = index < size

    private fun checkIfExhausted() {
        if (!hasNext()) {
            if (size == 0) {
                throw NoSuchElementException("This entity collection is empty.")
            }
            throw NoSuchElementException("This entity collection is exhausted.")
        }
    }

    fun get(index: Int): T {
        return items[index]
    }

    override fun next() : T {
        checkIfExhausted()
        return get(index++)
    }
}